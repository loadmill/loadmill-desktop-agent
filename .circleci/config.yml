version: 2.1
jobs:
  build_macos:
    macos:
      xcode: "14.1.0"
    steps:
      - checkout
      - run:
          name: create-keychain
          command: security create-keychain -p $KEYCHAIN_PASSWORD build.keychain
      - run:
          name: set-default-keychain
          command: security default-keychain -s build.keychain
      - run:
          name: unlock-keychain
          command: security unlock-keychain -p $KEYCHAIN_PASSWORD build.keychain
      - run:
          name: create CERT file
          command: echo $KEYSTORE | base64 --decode - > keystore.p12
      - run:
          name: create valid codesign identity
          command: security import keystore.p12 -k build.keychain -P $KEYCHAIN_PASSWORD -A -T /usr/bin/codesign -T /usr/bin/productsign
      - run:
          name: display valid identity created
          command: security find-identity -p codesigning -v
      - run:
          name: verify valid identity created
          command: '[[ $(security find-identity -p codesigning -v) = *"1 valid identities found"* ]]'
      - run:
          name: suppress macOS codesign execution prompt
          command: 'security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k $KEYCHAIN_PASSWORD build.keychain'
      - restore_cache:
          keys:
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-
      - run:
          name: install dependencies
          command: yarn install
      - save_cache:
          paths:
            - node_modules/
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: run tests
          command: yarn lint-and-test
      - when:
          condition:
              not:
                equal: [ master, << pipeline.git.branch >> ]
          steps:
            - run:
                name: package application
                command: yarn package
            - run:
                name: create distribution files
                command: yarn only-make
            - store_artifacts:
                path: out/
                destination: out/
      - when:
          condition:
            equal: [ master, << pipeline.git.branch >> ]
          steps:
            - run:
                name: publish release
                command: yarn forge-publish

workflows:
  version: 2
  build:
    jobs:
      - build_macos
